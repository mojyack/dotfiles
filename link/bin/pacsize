#!/usr/bin/python
import subprocess
import sys

class Package:
    def __init__(self, name):
        self.name = name
        self.size = -1
    
    def set_size(self, string):
        sep = string.find(' ')
        val = string[:sep]
        unit = string[(sep + 1):]

        if unit == 'B':
            pof = 0
        elif unit == 'KiB':
            pof = 1
        elif unit == 'MiB':
            pof = 2
        elif unit == 'GiB':
            pof = 3
        else:
            raise ValueError('package size too big.')
        self.size = int(float(val) * pow(1024, pof))

def list_packages() -> list:
    pkg_list = []
    cmd_out = subprocess.check_output('LANG=C pacman -Qi | egrep "^(Name|Installed)"', shell = True).decode('utf8')
    pkg_name_line = True
    for line in cmd_out.splitlines():
        line = line[line.find(':') + 2:]
        if pkg_name_line:
            pkg_list.append(Package(line))
        else:
            pkg_list[-1].set_size(line)
        pkg_name_line = not pkg_name_line
    return pkg_list

def byte_to_human_readable(size)->str:
    if size < pow(1024,1):
        val = size
        unit = 'B'
    elif size < pow(1024, 2):
        val = size / pow(1024, 1)
        unit = 'KiB'
    elif size < pow(1024, 3):
        val = size / pow(1024, 2)
        unit = 'MiB'
    else:
        val = size / pow(1024, 3)
        unit = 'GiB'
    return f'{val:.3f} ' + unit

def main():
    pkgs = sorted(list_packages(), reverse = True, key=lambda p: p.size)
    total = 0
    max_name_length = 0
    for p in pkgs:
        total += p.size
        if len(p.name) > max_name_length:
            max_name_length = len(p.name)
    print(str(len(pkgs)) + "(" + byte_to_human_readable(total) + ") installed.")
    for p in pkgs:
        print(p.name + ' ' * (max_name_length - len(p.name) + 1) + ':', byte_to_human_readable(p.size))

main()
